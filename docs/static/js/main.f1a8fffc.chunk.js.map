{"version":3,"sources":["Components/AddCategory.js","Helpers/getGif.js","Hooks/useFetchGifs.js","Components/ImagenComponent.js","Components/GifGrid.js","Components/HeaderComponents.js","index.js"],"names":["AddCategory","setCategorias","useState","InputText","setInputText","onSubmit","e","preventDefault","trim","length","cat","type","placeholder","onChange","target","value","getGif","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setstate","useEffect","then","imgs","ImagenComponent","className","src","alt","GifGrid","key","HeaderComponents","categorias","ReactDOM","render","document","getElementById"],"mappings":"6LAqBeA,EAnBK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACHC,mBAAS,IADN,mBAC9BC,EAD8B,KACnBC,EADmB,KAYrC,OACI,0BAAMC,SARS,SAACC,GAChBA,EAAEC,iBACCJ,EAAUK,OAAOC,OAAQ,IACxBR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAkBO,OACnCN,EAAa,OAKb,2BAAOO,KAAK,OAAOC,YAAY,WAAWC,SAZ9B,SAACP,GACjBF,EAAaE,EAAEQ,OAAOC,QAW+CA,MAAOZ,M,uBCArEa,EAfH,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACLC,EADK,iDAC2CC,UAAUH,GADrD,+DAEaI,MAAMF,GAFnB,cAELG,EAFK,gBAGUA,EAAUC,OAHpB,uBAGJC,EAHI,EAGJA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAR/B,kBAWJM,GAXI,4CAAH,sDCuBGO,EArBM,SAACf,GAAa,IAAD,EAEJf,mBAAS,CAC/BsB,KAAK,GACLS,SAAS,IAJiB,mBAEvBC,EAFuB,KAEhBC,EAFgB,KAmB9B,OAZAC,qBAAU,WACNpB,EAAOC,GACNoB,MAAK,SAAAC,GACFH,EAAS,CACLX,KAAKc,EACLL,SAAS,SAGnB,CAAChB,IAIIiB,GCVIK,EAVS,SAAC,GAAoB,EAAnBX,GAAoB,IAAhBC,EAAe,EAAfA,MAAOV,EAAQ,EAARA,IACjC,OACI,6BACA,4BAAMU,GACN,yBAAKW,UAAU,eACX,yBAAKC,IAAKtB,EAAKuB,IAAKb,OCcjBc,EAjBC,SAAC,GAAgB,IAAf1B,EAAc,EAAdA,SAAc,EAEEe,EAAaf,GAA/BqB,EAFgB,EAErBd,KAAWS,EAFU,EAEVA,QAElB,OACI,6BACA,4BAAKhB,GACHgB,GAAW,yCACb,yBAAKO,UAAU,8CAEPF,EAAKZ,KAAI,SAAAC,GAAG,OAAI,kBAAC,EAAD,eAAiBiB,IAAKjB,EAAIC,IAAQD,UCQnDkB,EAlBU,WAAO,IAAD,EAEQ3C,mBAAS,CAAC,WAFlB,mBAEpB4C,EAFoB,KAET7C,EAFS,KAI3B,OACI,6BACI,gDACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,4BAGI6C,EAAWpB,KAAI,SAAAhB,GAAG,OAAG,kBAAC,EAAD,CAASkC,IAAKlC,EAAKO,SAAUP,U,MCTlEqC,IAASC,OAAQ,kBAAC,EAAD,MAAuBC,SAASC,eAAe,U","file":"static/js/main.f1a8fffc.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst AddCategory = ({setCategorias}) => {\r\n    const [InputText, setInputText] = useState('')\r\n    const inputChange = (e) =>{\r\n        setInputText(e.target.value)\r\n    }\r\n    const formSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(InputText.trim().length> 2){\r\n            setCategorias(cat => [InputText,...cat])\r\n            setInputText('')\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={formSubmit}>\r\n            <input type=\"text\" placeholder=\"Buscar..\" onChange={inputChange} value={InputText}/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddCategory","// import React from 'react'\r\nconst getGif = async(category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=3h3s1mA1gtuYipbpV3xGHdGxOpwNXZi3`;\r\n    const respuesta = await fetch(url)\r\n    const {data} = await respuesta.json()\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs\r\n    \r\n}\r\n\r\nexport default getGif","import {useEffect, useState} from 'react'\r\nimport getGif from '../Helpers/getGif'\r\n\r\nconst useFetchGifs = (category)=> {\r\n    \r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(()=>{\r\n        getGif(category)\r\n        .then(imgs => {\r\n            setstate({\r\n                data:imgs,\r\n                loading: false\r\n            })\r\n        })\r\n    },[category])\r\n\r\n\r\n\r\n    return state\r\n}\r\nexport default useFetchGifs","import React from 'react'\r\n\r\nconst ImagenComponent = ({id, title, url})=> {\r\n    return (\r\n        <div>\r\n        <h5>{ title }</h5>\r\n        <div className=\"card-imagen\">\r\n            <img src={url} alt={title} />\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ImagenComponent\r\n","import React from 'react'\r\nimport useFetchGifs from '../Hooks/useFetchGifs'\r\nimport ImagenComponent from './ImagenComponent';\r\n\r\nconst  GifGrid= ({category}) => {\r\n\r\n    const {data:imgs, loading} =  useFetchGifs(category)  \r\n\r\n    return (\r\n        <div>\r\n        <h3>{category}</h3>\r\n        { loading && <p>Cargando..</p> }\r\n        <div className=\"card-box animate__animated animate__bounce\">\r\n            {\r\n                imgs.map(img => <ImagenComponent key={img.id} {...img}/>)\r\n            }\r\n        </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default GifGrid","import React, { useState }  from 'react'\r\nimport AddCategory from './AddCategory'\r\nimport GifGrid from './GifGrid'\r\n\r\nconst HeaderComponents = () => {\r\n    \r\n    const [categorias,setCategorias] = useState(['musica'])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Buscador de gifs</h1>\r\n            <AddCategory setCategorias={setCategorias}/>\r\n            <ol>\r\n            {\r\n                \r\n                categorias.map(cat=> <GifGrid key={cat} category={cat}/>)\r\n            }        \r\n                </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderComponents","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport HeaderComponents from './Components/HeaderComponents';\nimport './index.css';\n\n\nReactDOM.render( <HeaderComponents/> ,  document.getElementById('root')\n);\n\n"],"sourceRoot":""}